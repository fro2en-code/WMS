<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<context:annotation-config/>
	<!-- 配置要扫描的包 -->
	<context:component-scan base-package="wms.*.service"/>
	<context:component-scan base-package="wms.business.biz.*"/>
	<context:component-scan base-package="wms.business.unit.*"/>
	<context:component-scan base-package="com.ymt.*"/>
	<context:component-scan base-package="com.rtzltech.wms.les.*"/>

	<!-- 读入配置属性文件 -->
	<context:property-placeholder location="classpath*:jdbc.properties,classpath*:service.properties,classpath*:redis.properties,classpath:system.properties"/>
	<import resource="classpath:spring/spring-attr.xml"/>
	<import resource="classpath:spring/spring-hibernate.xml"/>
	<import resource="classpath:spring/spring-quartz.xml"/>
	<import resource="classpath:spring/dubbo-consumer.xml"/>
	<import resource="classpath:spring/spring-amqp.xml"/>

	<!-- 将session放入redis -->
	<bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		<property name="maxInactiveIntervalInSeconds" value="7200"/>
	</bean>
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"/>
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}"/>
		<property name="port" value="${redis.port}"/>
		<property name="timeout" value="${redis.timeout}"/>
		<property name="password" value="${redis.pwd}"/>
		<property name="poolConfig" ref="jedisPoolConfig"/>
		<property name="usePool" value="true"/>
	</bean>
	<!-- cache -->
	<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref='redisTemplate' p:usePrefix="true"/>
	<!-- 任务列表,这里没有用Map,为了避免重复注入 -->
	<util:list id="executeTaskList" list-class="java.util.ArrayList" value-type="wms.business.unit.ExecuteTaskUnit">
		<ref bean="reciveExecuteTaskUnit"/>
		<ref bean="lesReciveExecuteTaskUnit"/>
		<ref bean="carryExecuteTaskUnit"/>
		<ref bean="putawayExecuteTaskUnit"/>
		<ref bean="prePickExecuteTaskUnit"/>
		<ref bean="handSendExecuteTaskUnit"/>
		<ref bean="lesSendExecuteTaskUnit"/>
		<ref bean="moveExecuteTaskUnit"/>
		<ref bean="checkExecuteTaskUnit"/>
		<ref bean="sendTruckExecutTaskUnit"/>
		<ref bean="overflowPutExecuteTaskUnit"/>
	</util:list>

</beans>